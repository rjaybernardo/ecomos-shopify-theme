{{ 'section-rich-text.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}
<style>
  .works-header {
    font-size: 62px;
    font-style: normal;
    font-weight: 400;
    line-height: normal;
    margin-bottom: 30px !important;
  }
  .works-gradient {
    background: linear-gradient(90deg, #f4dca8 52.21%, #f5be66 55.6%, #ff8038 58.94%, #ff38bb 62.55%);
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    font-size: 62px;
    font-style: normal;
    font-weight: 400;
    line-height: normal;
  }

  .boxes-section {
    display: none;
   
  }
  .box-wrapper {
    display: flex;
    align-items: center;
  }
  .box {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    border-radius: 5px;
    border: 0.1px solid white;
    /* width: min(100%, 150px); */
    width: 100%;
    aspect-ratio: 1/1;
    position: relative;
  }
  .box p {
    text-align: center;
    font-size: 16px;
    font-style: normal;
    font-weight: 400;
    line-height: 150%;
    letter-spacing: -0.352px;
  }
  .last-box {
    width: 85%;
  }
  .works-icon {
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translateY(50%) translateX(-50%);
    width: 34px;
    height: 34px;
    border-radius: 50%;
  }
  .arrow {
    font-size: 24px;
    margin: 0 10px;
  }

  .box.dim,
  .arrow.dim {
    opacity: 0.1; /* Fully transparent when dimmed */
    transition: opacity 1s ease-in-out; /* Transition effect for fading */
  }

  .box:not(.dim),
  .arrow:not(.dim) {
    opacity: 1; /* Fully visible when not dimmed */
  }
  @media(min-width:990px){
  .boxes-section {
  display: grid;
  grid-template-columns: repeat(7, 1fr);
  overflow: hidden;
  height: 167px;
}
  }
</style>
<div class="isolate{% unless section.settings.full_width %} page-width{% endunless %}">
  <div class="rich-text content-container color-{{ section.settings.color_scheme }} gradient{% if section.settings.full_width %} rich-text--full-width content-container--full-width{% endif %} section-{{ section.id }}-padding">
    <div class="rich-text__wrapper rich-text__wrapper--{{ section.settings.desktop_content_position }}{% if section.settings.full_width %} page-width{% endif %}">
      <div class="rich-text__blocks {{ section.settings.content_alignment }}">
        <h2
          class="works-header rich-text__heading rte inline-richtext {{ block.settings.heading_size }}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
          {{ block.shopify_attributes }}
          {% if settings.animations_reveal_on_scroll %}
            data-cascade
            style="--animation-order: {{ forloop.index }};"
          {% endif %}
        >
          {%- if section.settings.heading == blank -%}
            How ecom<span class="works-gradient">OS</span> works.
          {%- else -%}
            {{ section.settings.heading }}
          {%- endif -%}
        </h2>
      </div>
    </div>
    <div class="works-box-container boxes-section page-width">
      {% for block in section.blocks %}
        <div class="box-wrapper">
          <div class="box {% unless forloop.first %}dim{% endunless %} {% if forloop.last %}last-box{% endif %}">
            <p>{{ block.settings.box_header | upcase }}</p>
            {% assign icon_name = 'box-icon' | append: forloop.index | append: '.png' %}
            <img src="{{ icon_name | asset_url }}" alt="Icon" class="works-icon" width="33" height="33" loading="lazy">
          </div>
          {% unless forloop.last %}
            <div class="arrow dim" style="color:red;margin-left:-1px;margin-right:-1px">â†’</div>
          {% endunless %}
        </div>
      {% endfor %}
    </div>
  </div>
</div>
<script>
  document.addEventListener('DOMContentLoaded', function () {
    const boxes = document.querySelectorAll('.box-wrapper');
    let currentBoxIndex = 0;
    let animateArrow = false; // flag to determine whether to animate the box or arrow

    function dimAllElements() {
      boxes.forEach((box, index) => {
        if (index !== 0) {
          // Skip the first box
          box.querySelector('.box').classList.add('dim');
        }
        if (box.querySelector('.arrow')) {
          box.querySelector('.arrow').classList.add('dim');
        }
      });
    }

    function startAnimation() {
      const interval = setInterval(() => {
        const currentBox = boxes[currentBoxIndex];
        if (!animateArrow) {
          currentBox.querySelector('.box').classList.remove('dim');
          animateArrow = true; // next cycle will animate the arrow
        } else if (currentBox.querySelector('.arrow')) {
          currentBox.querySelector('.arrow').classList.remove('dim');
          animateArrow = false; // next cycle will animate the box
          currentBoxIndex++; // move to the next box
        } else {
          animateArrow = false; // next cycle will animate the box
          currentBoxIndex++; // move to the next box if there's no arrow
        }

        if (currentBoxIndex >= boxes.length) {
          clearInterval(interval);
          setTimeout(() => {
            dimAllElements();
            currentBoxIndex = 0; // reset the index
            animateArrow = false; // reset the flag
            startAnimation();
          }, 1000);
        }
      }, 1000);
    }

    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          startAnimation();
          observer.disconnect(); // disconnect observer after starting the first loop to avoid re-triggering
        }
      });
    });

    observer.observe(document.querySelector('.boxes-section'));
  });
</script>

{% schema %}
{
  "name": "EcomOS Works",
  "tag": "section",
  "class": "section",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "text",
      "id": "header",
      "label": "Header"
    },
    {
      "type": "select",
      "id": "desktop_content_position",
      "options": [
        {
          "value": "left",
          "label": "t:sections.rich-text.settings.desktop_content_position.options__1.label"
        },
        {
          "value": "center",
          "label": "t:sections.rich-text.settings.desktop_content_position.options__2.label"
        },
        {
          "value": "right",
          "label": "t:sections.rich-text.settings.desktop_content_position.options__3.label"
        }
      ],
      "default": "center",
      "label": "t:sections.rich-text.settings.desktop_content_position.label",
      "info": "t:sections.rich-text.settings.desktop_content_position.info"
    },
    {
      "type": "select",
      "id": "content_alignment",
      "options": [
        {
          "value": "left",
          "label": "t:sections.rich-text.settings.content_alignment.options__1.label"
        },
        {
          "value": "center",
          "label": "t:sections.rich-text.settings.content_alignment.options__2.label"
        },
        {
          "value": "right",
          "label": "t:sections.rich-text.settings.content_alignment.options__3.label"
        }
      ],
      "default": "center",
      "label": "t:sections.rich-text.settings.content_alignment.label"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "background-1"
    },
    {
      "type": "checkbox",
      "id": "full_width",
      "default": true,
      "label": "t:sections.rich-text.settings.full_width.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 40
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 52
    }
  ],
  "blocks": [
    {
      "type": "heading",
      "name": "t:sections.rich-text.blocks.heading.name",
      "limit": 3,
      "settings": [
        {
          "type": "inline_richtext",
          "id": "heading",
          "default": "Talk about your brand",
          "label": "t:sections.rich-text.blocks.heading.settings.heading.label"
        },
        {
          "type": "select",
          "id": "heading_size",
          "options": [
            {
              "value": "h2",
              "label": "t:sections.all.heading_size.options__1.label"
            },
            {
              "value": "h1",
              "label": "t:sections.all.heading_size.options__2.label"
            },
            {
              "value": "h0",
              "label": "t:sections.all.heading_size.options__3.label"
            },
            {
              "value": "hxl",
              "label": "t:sections.all.heading_size.options__4.label"
            }
          ],
          "default": "h1",
          "label": "t:sections.all.heading_size.label"
        }
      ]
    },
    {
      "type": "caption",
      "name": "t:sections.rich-text.blocks.caption.name",
      "limit": 3,
      "settings": [
        {
          "type": "text",
          "id": "caption",
          "default": "Add a tagline",
          "label": "t:sections.rich-text.blocks.caption.settings.text.label"
        },
        {
          "type": "select",
          "id": "text_style",
          "options": [
            {
              "value": "subtitle",
              "label": "t:sections.rich-text.blocks.caption.settings.text_style.options__1.label"
            },
            {
              "value": "caption-with-letter-spacing",
              "label": "t:sections.rich-text.blocks.caption.settings.text_style.options__2.label"
            }
          ],
          "default": "caption-with-letter-spacing",
          "label": "t:sections.rich-text.blocks.caption.settings.text_style.label"
        },
        {
          "type": "select",
          "id": "text_size",
          "options": [
            {
              "value": "small",
              "label": "t:sections.rich-text.blocks.caption.settings.caption_size.options__1.label"
            },
            {
              "value": "medium",
              "label": "t:sections.rich-text.blocks.caption.settings.caption_size.options__2.label"
            },
            {
              "value": "large",
              "label": "t:sections.rich-text.blocks.caption.settings.caption_size.options__3.label"
            }
          ],
          "default": "medium",
          "label": "t:sections.rich-text.blocks.caption.settings.caption_size.label"
        }
      ]
    },
    {
      "type": "text",
      "name": "t:sections.rich-text.blocks.text.name",
      "limit": 3,
      "settings": [
        {
          "type": "richtext",
          "id": "text",
          "default": "<p>Share information about your brand with your customers. Describe a product, make announcements, or welcome customers to your store.</p>",
          "label": "t:sections.rich-text.blocks.text.settings.text.label"
        }
      ]
    },
    {
      "type": "button",
      "name": "t:sections.rich-text.blocks.buttons.name",
      "limit": 2,
      "settings": [
        {
          "type": "text",
          "id": "button_label",
          "default": "Button label",
          "label": "t:sections.rich-text.blocks.buttons.settings.button_label_1.label",
          "info": "t:sections.rich-text.blocks.buttons.settings.button_label_1.info"
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "t:sections.rich-text.blocks.buttons.settings.button_link_1.label"
        },
        {
          "type": "checkbox",
          "id": "button_style_secondary",
          "default": false,
          "label": "t:sections.rich-text.blocks.buttons.settings.button_style_secondary_1.label"
        },
        {
          "type": "text",
          "id": "button_label_2",
          "label": "t:sections.rich-text.blocks.buttons.settings.button_label_2.label",
          "info": "t:sections.rich-text.blocks.buttons.settings.button_label_2.info"
        },
        {
          "type": "url",
          "id": "button_link_2",
          "label": "t:sections.rich-text.blocks.buttons.settings.button_link_2.label"
        },
        {
          "type": "checkbox",
          "id": "button_style_secondary_2",
          "default": false,
          "label": "t:sections.rich-text.blocks.buttons.settings.button_style_secondary_2.label"
        }
      ]
    },
    {
      "type": "box",
      "name": "Box",
      "settings": [
        {
          "type": "richtext",
          "id": "box_header",
          "label": "Box Header",
          "default": "<p>Text</p>"
        },
        {
          "type": "text",
          "id": "box_icon",
          "label": "Box Icon",
          "default": "Icon"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "EcomOS Works",
      "blocks": []
    }
  ]
}
{% endschema %}
